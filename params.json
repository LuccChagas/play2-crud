{"name":"Play2-crud","tagline":"Simple CRUD & DAO implementation for play2","body":"play2-crud\r\n==========\r\n\r\n[![Join the chat at https://gitter.im/hakandilek/play2-crud](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/hakandilek/play2-crud?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nPowerful CRUD &amp; DAO implementation with REST interface for [play framework](http://github.com/playframework/play) 2.x\r\n\r\nFor the [Typesafe Activator](http://typesafe.com/activator) check [play2-crud-activator](https://github.com/hakandilek/play2-crud-activator). \r\n\r\n### Some screenshots\r\n\r\n * index page\r\n   ![crud-index page](/screenshot/index.png)\r\n\r\n * create page\r\n   ![create page](/screenshot/create.png)\r\n\r\n * list page\r\n   ![list page](/screenshot/list.png)\r\n   \r\n## Quick Start\r\n\r\nFollow these steps to use play2-crud. You can also use it partially just for DAO or CRUD controllers. If you think any part needs further explanation, please report a new issue.\r\n\r\n### Add play2-crud dependency\r\n\r\nYou can begin with adding play2-crud dependency inside `conf/Build.scala` file.\r\n\r\n * Add app dependency:\r\n\r\n```\r\n    val appDependencies = Seq(\r\n        javaCore, javaJdbc, javaEbean,\r\n        \"play2-crud\" % \"play2-crud_2.10\" % \"0.7.0\"\r\n    )\r\n\r\n```\r\n\r\n * Dependency version is for version 0.7.0 defined, but you can use the latest version.\r\n\r\n * Add custom maven repositories:\r\n\r\n```\r\n    val main = play.Project(appName, appVersion, appDependencies).settings(\r\n        //maven repository\r\n        resolvers += \"release repository\" at  \"http://hakandilek.github.com/maven-repo/releases/\",\r\n        resolvers += \"snapshot repository\" at \"http://hakandilek.github.com/maven-repo/snapshots/\"\r\n    )\r\n\r\n```\r\n\r\n### Associate Global settings\r\n####Direct reference\r\nIf you don't want to override the play application launcher, you just have to notice to play that the class to use as launcher is now GlobalCRUDSettings. Change the `application.global` configuration key in the `conf/application.conf` file, and use `play.utils.crud.GlobalCRUDSettings`:\r\n\r\n```\r\n...\r\napplication.global=play.utils.crud.GlobalCRUDSettings\r\n...\r\n\r\n```\r\n\r\n### Define routes\r\n\r\n```\r\n# CRUD Controllers\r\n->     /app             play.crud.Routes\r\n\r\n# REST API\r\n->     /api             play.rest.Routes\r\n\r\n```\r\n\r\n\r\n### Define model\r\n\r\n * Model class has to implement `play.utils.dao.BasicModel` with the type parameter indicating the type of the `@Id` field.\r\n\r\n```java\r\n@Entity\r\npublic class Sample extends Model implements BasicModel<Long> {\r\n\r\n   @Id\r\n   private Long key;\r\n\r\n   @Basic\r\n   @Required\r\n   private String name;\r\n\r\n   public Long getKey() {\r\n      return key;\r\n   }\r\n\r\n   public void setKey(Long key) {\r\n      this.key = key;\r\n   }\r\n\r\n   public String getName() {\r\n      return name;\r\n   }\r\n\r\n   public void setName(String name) {\r\n      this.name = name;\r\n   }\r\n}\r\n```\r\n\r\n * Here the `Sample` model class implements `BasicModel<Long>` where `key` field indicated with `@Id` is `Long`.\r\n\r\n... call [http://localhost:9000/app](http://localhost:9000/app) and voila!\r\n\r\n\r\n# Samples\r\n   \r\n   * [Sample with basic dynamic CRUD controllers](https://github.com/hakandilek/play2-crud/tree/master/samples/play2-crud-simple)\r\n   * [Sample with custom views](https://github.com/hakandilek/play2-crud/tree/master/samples/play2-crud-customView) is a full featured sample.\r\n   * [Full featured sample with DAO and DAOListeners](https://github.com/hakandilek/play2-crud/tree/master/samples/play2-crud-sample)\r\n   * [Sample with Cache usage](https://github.com/hakandilek/play2-crud/tree/master/samples/play2-cache-sample)\r\n \r\n# HOW-TO\r\n\r\n Here you can find some HOW-TO documents introducing some powerful functionality:\r\n  * [HOW-TO use simple CRUD](docs/simple-crud.md)\r\n  * [HOW-TO define a custom DAO](docs/custom-dao.md)\r\n  * [HOW-TO define a custom Controller](docs/custom-controller.md)\r\n  * [HOW-TO use DAO Listeners](docs/dao-listeners.md)\r\n  * [HOW-TO use dynamic REST Controllers](docs/rest-controllers.md)\r\n  * [HOW-TO use custom REST Controllers](docs/custom-rest-controllers.md)\r\n  * [HOW-TO Override Play Launcher](docs/override-play-launcher.md)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}